process testPedOffset = 
{

  include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerMapping.cfi"
  include "EventFilter/EcalTBRawToDigi/data/EcalUnpackerData.cfi"  

#     module ecalEBunpacker = EcalRawToDigiDev{
#
#      untracked string InputLabel="source"
#
##    by default whole ECAL fedId range is loaded, 600-670.
##    This is in case a selection was needed.
##    fedId==13 is special case for ECAL cosmic stand
##    example 1: all the feds allocated to ECAL DCC's are selected by providing this empty list
##        untracked vint32  FEDs    = { }
##    example 2: fedId used by the DCC at th cosmics stand
##            untracked vint32 FEDs = {13}
##    example 3: fedId used at the best beams (e.g. SM22)
##            untracked vint32 FEDs = {22}
#
#             untracked vint32 FEDs = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36}
#
## By default these are true  
#      untracked bool eventPut               = true 
#        untracked bool memUnpacking     = true
#        untracked bool headerUnpacking = true 
#        untracked bool srpUnpacking       = true
##untracked bool tccUnpacking     = true
#        untracked bool feUnpacking         = true
#        untracked bool syncCheck           = false 
#
## Default values 
## untracked uint numbXtalTSamples    = 10
## untracked uint numbTriggerTSamples = 1  
#
## if no 2 input vectors are specified, hard coded default DCCId:FedId correspondence:
##                                            1:601, 2:602 ...      54:654
## is used
## For special mappings, use the two ordered vectors here below
#
##  example1:  the same as what loaded
##        untracked vint32 orderedFedList      = {601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
##         619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
##         637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654  }
##      untracked vint32 orderedDCCIdList = {  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,
##        19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,
##        37,  38,  39,  40,  41,  42,  43,  44,  45,  46, 47,  48,  49,  50,  51,  52,  53,  54}
#
##  example2:  special case cosmic stand like (SM-any in EB+01)
## untracked vint32 orderedFedList      = {13}
## untracked vint32 orderedDCCIdList = {28}
#
##  example3:  special case test beam like (SM-22 in EB+01)
## untracked vint32 orderedFedList      = {22}
## untracked vint32 orderedDCCIdList = {28}
#
#  untracked vint32 orderedFedList =   {1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36}
#  untracked vint32 orderedDCCIdList = {28,29,30,31,32,33,34,25,26,27,28,29,40,41,42,43,44,45,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27}
#
#      untracked bool DoRegional = false
#        untracked string FedLabel = "listfeds"
#
#    }


  # analyzer run
  module pedTest = EBPedOffset {
    string digiCollection = 'ebDigis'
    string digiProducer = 'ecalEBunpacker'
    string headerProducer = 'ecalEBunpacker'
    string xmlFile = 'pedOffsetsSeth.xml'
    # DB info
    untracked string dbHostName = '0'
    untracked string dbName = '0'
    untracked string dbUserName = 'foo'
    untracked string dbPassword = 'foo'
    int32 run = 100
    string plotting = 'details.root'
 }

     module header = EcalDCCHeaderDumperModule{
         untracked int32 verbosity = 3
      }                                                                                                       

     module digi = EcalDigiDumperModule{
         untracked int32 verbosity = 3
      }                                                                                                       

  #path p = { ecalEBunpacker , pedTest }

  path p = { ecalEBunpacker }
  #path p = { ecalEBunpacker , header, pedTest }
  #path p = { ecalEBunpacker , header , digi }
  #path p = { ecalEBunpacker , digi }

  # input
  # all events
  #   untracked PSet maxEvents = {untracked int32 input = -1}
     untracked PSet maxEvents = {untracked int32 input = 10}
    source = PoolSource {
        # SM 25
        #untracked vstring fileNames = {'file:/data/scooper/data/h4b.00015592.A.0.0.root'}
        # SM 06
        untracked vstring fileNames = {'file:/data/scooper/data/h4b.00016179.A.0.0.root'}
        # SM 12
        #untracked vstring fileNames = {'file:/data/scooper/data/h4b.00015185.A.0.0.root'}
        # SM 24
        #untracked vstring fileNames = {'file:/data/scooper/data/h4b.00014747.A.0.0.root'}
    }

  #   source = DAQEcalTBInputService{
  #             # govoni@cmsmi3
  #             untracked vstring fileNames = { 'file:/data/scooper/data/H4-000018180-SM16-PEDESTAL-OFFSET_SCAN' }
  #             #untracked vstring fileNames = { 'file:/data/govoni/CMSSW/TB/H4-000022132-SM22-PEDESTAL-OFFSET_SCAN'}
  #             # temporary solution for the pre6 only!
  #             # soft link in the current folder beginning with file:
  #             #untracked vstring fileNames = {'file:testpre6'}
  #             untracked bool isBinary = true
  #      }
}

