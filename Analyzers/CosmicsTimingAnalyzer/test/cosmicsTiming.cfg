process COSMICSANALYSIS = { 

  source = PoolSource {
    untracked vstring fileNames = {
#'/store/data/CRUZET2/Cosmics/RECO/CRUZET2_V1_v2/0008/207BB033-9F39-DD11-B132-0030487A3C9A.root',
#'/store/data/CRUZET2/Cosmics/RECO/CRUZET2_V1_v2/0008/20E8806A-9E39-DD11-A5B8-001617DBD556.root'
      #'rfio:/castor/cern.ch/user/c/ccecal/CRUZET/HighEnergySkim/RECO/CMSSW_2_0_7-T0ReReco-v1/HighEnEventSkim_43439.root'
    
    #'file:/data/whybee0c/user/cooper/data/cruzet2/007C93EC-8B39-DD11-886E-001617E30CE8.root',
    #'file:/data/whybee0c/user/cooper/data/cruzet2/02BE631A-8B39-DD11-A796-000423D174FE.root',
    'file:/data/whybee0c/user/cooper/data/cruzet2/0095CB5D-8D39-DD11-B6AB-000423D98F98.root'
    }        
    untracked uint32 skipEvents = 0
  }

  untracked PSet maxEvents = {untracked int32 input = -1}

#include "CaloOnlineTools/EcalTools/data/ecalCosmicsHists.cfi"
  module ecalCosmicsHists = CosmicsTiming{

    InputTag ecalRecHitCollection = ecalRecHit:EcalRecHitsEB
      InputTag EBDigiCollection                   = ecalEBunpacker:ebDigis
      InputTag endcapClusterCollection      = cosmicSuperClusters:CosmicEndcapSuperClusters
      InputTag barrelClusterCollection      = cosmicSuperClusters:CosmicBarrelSuperClusters

# use hash index to mask channels
# add a simple description of hashIndex (hhahhahhh...)
      untracked vint32 maskedChannels           = {-1}
# masked FEDs
    untracked vint32 maskedFEDs = {-1}
# masked EBids
    untracked vstring maskedEBs = {"-1"}
# parameter to specify histogram maxmimum range
    untracked double histogramMaxRange = 1.8
# parameter to specify histogram minimum range
      untracked double histogramMinRange = 0.0
# parameter for the name of the output root file with TH1F
      untracked string fileName = 'EcalCosmicsHists'  
# for filling timing histograms
      untracked double MinTimingAmp = 0.100
# for using the time stamp information
###############################################################################################
# This is a hard one, one can look at the Ecal Run Summary and get the starting time of the run
#    THE COMMAND
#  date --date='2008-07-03 17:45:33 UTC' +%s 
#    OUTPUTS "1215107133"
###############################################################################################
# A second option is from this location 
#  http://cmsmondev.cern.ch/cmsdb/servlet/RunSummary?RUN=43625
#  Just use the start time, make sure you use CEST rather than UTC
#  date --date='2008-07-03 19:45:33 CEST' +%s 
###############################################################################################
# If you have trouble, just use the smallest number from the RunFiles (with run number)
# http://cmsmondev.cern.ch/cmsdb/servlet/RunFiles?RUN=43625
# Search for the string below, it should be the lowest... and subtract say 100s...
# ".0001.Calibration.storageManager.1.0000.dat"
###############################################################################################
      untracked double TimeStampStart  =  1215107133.0 #in seconds since Jan 1 1970
      untracked double TimeStampLength =  3.0 #in number of hours since run began
      untracked int32  TimeStampBins   =  1800 #number of timing bins MUST Be larger than 360
# Global trigger tag
      untracked string L1GlobalReadoutRecord = "gtDigis"
      untracked string L1GlobalMuonReadoutRecord = "gtDigis"
# Track associator
      include "TrackingTools/TrackAssociator/data/default.cfi"
# for putting runNumber in filename
      untracked bool runInFileName = true
  }
    replace ecalCosmicsHists.fileName = 'EcalCosmicsHists'
    replace ecalCosmicsHists.runInFileName = false

##
## Conditions and Calibration from TrivialCond or DB
##
#es_source src1 = EcalTrivialConditionRetriever{
#     untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
#                                        0.000,  0.000,  1.000,
#                                        0.000,  0.000,  0.000,  0.000 }
#     untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
#                                        0.000,  0.000,  0.000,
#                                        0.000,  0.000,  0.000,  0.000 }
#     untracked vdouble jittWeights = {  0.040,  0.040,  0.040,
#                                        0.000,  1.320, -0.050,
#                                       -0.500, -0.500, -0.400,  0.000 }
#     untracked double adcToGeVEBConstant = 0.009
#     untracked string  channelStatusFile = "CaloOnlineTools/EcalTools/data/listCRUZET2.v4.txt"
##     untracked string  channelStatusFile = ""
#} 

    include "Configuration/StandardSequences/data/FrontierConditions_GlobalTag.cff"
    #replace GlobalTag.globaltag = "CRUZET2_V2::All"
    #replace GlobalTag.globaltag = "CRUZET3_V2P::All"
    replace GlobalTag.globaltag = "CRUZET3_V2::All"

    include "CalibCalorimetry/EcalTrivialCondModules/data/EcalTrivialCondRetriever.cfi"
    replace EcalTrivialConditionRetriever.producedEcalWeights = false
    replace EcalTrivialConditionRetriever.producedEcalPedestals = false
    replace EcalTrivialConditionRetriever.producedEcalIntercalibConstants = false
    replace EcalTrivialConditionRetriever.producedEcalIntercalibErrors = false
    replace EcalTrivialConditionRetriever.producedEcalGainRatios = false
    replace EcalTrivialConditionRetriever.producedEcalADCToGeVConstant = false
    replace EcalTrivialConditionRetriever.producedEcalLaserCorrection = false
#Put this to true to read channel status from file 
    replace EcalTrivialConditionRetriever.producedChannelStatus = true
    #replace EcalTrivialConditionRetriever.channelStatusFile ="CaloOnlineTools/EcalTools/data/listCRUZET2.v4.txt"
    replace EcalTrivialConditionRetriever.channelStatusFile ="CalibCalorimetry/EcalTrivialCondModules/data/listCRUZET3.v1.txt"
    es_prefer = EcalTrivialConditionRetriever{}

es_prefer = SiStripPedestalsFakeESSource{}

  include "CalibCalorimetry/EcalLaserCorrection/data/ecalLaserCorrectionService.cfi"

##
## Required for TrackAssociator
##
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
    include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"  
#    include "TrackingTools/TrackAssociator/data/DetIdAssociatorESProducer.cff"
# add the SteppingHelixPropagator to the EventSetup
    include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorAny.cfi"
    include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorAlong.cfi"
    include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorOpposite.cfi"
### Magnetic field: force mag field to be 0.0 tesla
    include "Configuration/GlobalRuns/data/ForceZeroTeslaField.cff"

#module dumpEv = EventContentAnalyzer {}

##
## Limit MessageLogger
##
    service = MessageLogger{
      untracked vstring destinations = { "cout" }
      untracked vstring categories = { "EcalCosmicsHists" }
      untracked PSet cout = {   untracked string threshold = "INFO"  }
      untracked vstring suppressInfo = {"ecalEBunpacker","ecalUncalibHit","ecalRecHit","hcalDigis","hcalLocalRecoSequence"}
      untracked vstring suppressWarning = {"ecalEBunpacker","hcalDigis","hcalLocalRecoSequence"}
    }

##
## Required for RECO
##
  include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerMapping.cfi"
    include "EventFilter/EcalRawToDigiDev/data/EcalUnpackerData.cfi"
#replace ecalEBunpacker.InputLabel = "rawDataCollector"

#module ecalUncalibHit = ecalMaxSampleUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalMaxSampleUncalibRecHit.cfi"
    module ecalUncalibHit = ecalFixedAlphaBetaFitUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"

    replace ecalUncalibHit.EBdigiCollection = ecalEBunpacker:ebDigis
    replace ecalUncalibHit.EEdigiCollection = ecalEBunpacker:eeDigis

    include "RecoLocalCalo/EcalRecProducers/data/ecalRecHit.cfi"
    replace ecalRecHit.ChannelStatusToBeExcluded={1}
  replace ecalRecHit.EBuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
    replace ecalRecHit.EEuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEE

# geometry needed for clustering
    include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

# FixedMatrix clusters 
    include "RecoEcal/EgammaClusterProducers/data/cosmicClusteringSequence.cff"


##
## RECO path
##
    path p = {  
#ecalEBunpacker,
#ecalUncalibHit,
#ecalRecHit,
      cosmicClusteringSequence,
      ecalCosmicsHists 
    }


}

